<?xml version="1.0" encoding="utf-8"?>
<modification>
    <name>Fast Product Price Editing</name>
    <version>1.0</version>
    <author>Emre Acar</author>
    <link>https://www.emreacar.com.tr</link>

    <file path="admin/controller/catalog/product.php">
        <operation>
          <search><![CDATA[
            $data['delete'] = $this->url->link('catalog/product/delete', 'user_token=' . $this->session->data['user_token'] . $url, true);
          ]]></search>
          <add position="after"><![CDATA[
            $data['batch'] = $this->url->link('catalog/product/batch', 'user_token=' . $this->session->data['user_token'] . $url, true);
          ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            public function add() {
            ]]></search>
            <add position="before"><![CDATA[
            public function update_price() {
          		$product_id = $this->request->get['product_id'];
          		$price = $this->request->get['price'];

          		$this->db->query("UPDATE oc_product set price = '$price' WHERE product_id = '$product_id'");

          		$json = ['status' => 'ok'];
          		echo json_encode($json);
          	}
          	public function batch() {
          		$this->load->language('catalog/product');

          		$this->document->setTitle($this->language->get('heading_title'));

          		$this->load->model('catalog/product');

          		if (isset($this->request->get['filter_name'])) {
          			$filter_name = $this->request->get['filter_name'];
          		} else {
          			$filter_name = '';
          		}

          		if (isset($this->request->get['filter_model'])) {
          			$filter_model = $this->request->get['filter_model'];
          		} else {
          			$filter_model = '';
          		}

          		if (isset($this->request->get['filter_price'])) {
          			$filter_price = $this->request->get['filter_price'];
          		} else {
          			$filter_price = '';
          		}

          		if (isset($this->request->get['filter_quantity'])) {
          			$filter_quantity = $this->request->get['filter_quantity'];
          		} else {
          			$filter_quantity = '';
          		}

          		if (isset($this->request->get['filter_status'])) {
          			$filter_status = $this->request->get['filter_status'];
          		} else {
          			$filter_status = '';
          		}

          		if (isset($this->request->get['sort'])) {
          			$sort = $this->request->get['sort'];
          		} else {
          			$sort = 'pd.name';
          		}

          		if (isset($this->request->get['order'])) {
          			$order = $this->request->get['order'];
          		} else {
          			$order = 'ASC';
          		}

          		if (isset($this->request->get['page'])) {
          			$page = $this->request->get['page'];
          		} else {
          			$page = 1;
          		}

          		$url = '';

          		if (isset($this->request->get['filter_name'])) {
          			$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));
          		}

          		if (isset($this->request->get['filter_model'])) {
          			$url .= '&filter_model=' . urlencode(html_entity_decode($this->request->get['filter_model'], ENT_QUOTES, 'UTF-8'));
          		}

          		if (isset($this->request->get['filter_price'])) {
          			$url .= '&filter_price=' . $this->request->get['filter_price'];
          		}

          		if (isset($this->request->get['filter_quantity'])) {
          			$url .= '&filter_quantity=' . $this->request->get['filter_quantity'];
          		}

          		if (isset($this->request->get['filter_status'])) {
          			$url .= '&filter_status=' . $this->request->get['filter_status'];
          		}

          		if (isset($this->request->get['order'])) {
          			$url .= '&order=' . $this->request->get['order'];
          		}

          		if (isset($this->request->get['page'])) {
          			$url .= '&page=' . $this->request->get['page'];
          		}

          		$data['breadcrumbs'] = array();

          		$data['breadcrumbs'][] = array(
          			'text' => $this->language->get('text_home'),
          			'href' => $this->url->link('common/dashboard', 'user_token=' . $this->session->data['user_token'], true)
          		);

          		$data['breadcrumbs'][] = array(
          			'text' => 'Batch Product Price Editing',
          			'href' => $this->url->link('catalog/product/batch', 'user_token=' . $this->session->data['user_token'] . $url, true)
          		);


          		$data['products'] = array();

          		$filter_data = array(
          			'filter_name'	  => $filter_name,
          			'filter_model'	  => $filter_model,
          			'filter_price'	  => $filter_price,
          			'filter_quantity' => $filter_quantity,
          			'filter_status'   => $filter_status,
          			'sort'            => $sort,
          			'order'           => $order,
          			'start'           => ($page - 1) * 100,
          			'limit'           => 100
          		);

          		$this->load->model('tool/image');

          		$product_total = $this->model_catalog_product->getTotalProducts($filter_data);

          		$results = $this->model_catalog_product->getProducts($filter_data);

          		foreach ($results as $result) {
          			if (is_file(DIR_IMAGE . $result['image'])) {
          				$image = $this->model_tool_image->resize($result['image'], 100, 100);
          			} else {
          				$image = $this->model_tool_image->resize('no_image.png', 100, 100);
          			}

          			$special = false;

          			$product_specials = $this->model_catalog_product->getProductSpecials($result['product_id']);

          			foreach ($product_specials  as $product_special) {
          				if (($product_special['date_start'] == '0000-00-00' || strtotime($product_special['date_start']) < time()) && ($product_special['date_end'] == '0000-00-00' || strtotime($product_special['date_end']) > time())) {
          					$special = $this->currency->format($product_special['price'], $this->config->get('config_currency'));

          					break;
          				}
          			}

          			$data['products'][] = array(
          				'product_id' => $result['product_id'],
          				'image'      => $image,
          				'name'       => $result['name'],
          				'model'      => $result['model'],
          				'price'      => $this->currency->format($result['price'], $this->config->get('config_currency')),
          				'special'    => $special,
          				'quantity'   => $result['quantity'],
          				'status'     => $result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled'),
          				'edit'       => $this->url->link('catalog/product/edit', 'user_token=' . $this->session->data['user_token'] . '&product_id=' . $result['product_id'] . $url, true)
          			);
          		}

          		$data['user_token'] = $this->session->data['user_token'];

          		if (isset($this->error['warning'])) {
          			$data['error_warning'] = $this->error['warning'];
          		} else {
          			$data['error_warning'] = '';
          		}

          		if (isset($this->session->data['success'])) {
          			$data['success'] = $this->session->data['success'];

          			unset($this->session->data['success']);
          		} else {
          			$data['success'] = '';
          		}

          		if (isset($this->request->post['selected'])) {
          			$data['selected'] = (array)$this->request->post['selected'];
          		} else {
          			$data['selected'] = array();
          		}

          		$url = '';

          		if (isset($this->request->get['filter_name'])) {
          			$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));
          		}

          		if (isset($this->request->get['filter_model'])) {
          			$url .= '&filter_model=' . urlencode(html_entity_decode($this->request->get['filter_model'], ENT_QUOTES, 'UTF-8'));
          		}

          		if (isset($this->request->get['filter_price'])) {
          			$url .= '&filter_price=' . $this->request->get['filter_price'];
          		}

          		if (isset($this->request->get['filter_quantity'])) {
          			$url .= '&filter_quantity=' . $this->request->get['filter_quantity'];
          		}

          		if (isset($this->request->get['filter_status'])) {
          			$url .= '&filter_status=' . $this->request->get['filter_status'];
          		}

          		if ($order == 'ASC') {
          			$url .= '&order=DESC';
          		} else {
          			$url .= '&order=ASC';
          		}

          		if (isset($this->request->get['page'])) {
          			$url .= '&page=' . $this->request->get['page'];
          		}

          		$data['sort_name'] = $this->url->link('catalog/product/batch', 'user_token=' . $this->session->data['user_token'] . '&sort=pd.name' . $url, true);
          		$data['sort_model'] = $this->url->link('catalog/product/batch', 'user_token=' . $this->session->data['user_token'] . '&sort=p.model' . $url, true);
          		$data['sort_price'] = $this->url->link('catalog/product/batch', 'user_token=' . $this->session->data['user_token'] . '&sort=p.price' . $url, true);
          		$data['sort_quantity'] = $this->url->link('catalog/product/batch', 'user_token=' . $this->session->data['user_token'] . '&sort=p.quantity' . $url, true);
          		$data['sort_status'] = $this->url->link('catalog/product/batch', 'user_token=' . $this->session->data['user_token'] . '&sort=p.status' . $url, true);
          		$data['sort_order'] = $this->url->link('catalog/product/batch', 'user_token=' . $this->session->data['user_token'] . '&sort=p.sort_order' . $url, true);

          		$url = '';

          		if (isset($this->request->get['filter_name'])) {
          			$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));
          		}

          		if (isset($this->request->get['filter_model'])) {
          			$url .= '&filter_model=' . urlencode(html_entity_decode($this->request->get['filter_model'], ENT_QUOTES, 'UTF-8'));
          		}

          		if (isset($this->request->get['filter_price'])) {
          			$url .= '&filter_price=' . $this->request->get['filter_price'];
          		}

          		if (isset($this->request->get['filter_quantity'])) {
          			$url .= '&filter_quantity=' . $this->request->get['filter_quantity'];
          		}

          		if (isset($this->request->get['filter_status'])) {
          			$url .= '&filter_status=' . $this->request->get['filter_status'];
          		}

          		if (isset($this->request->get['sort'])) {
          			$url .= '&sort=' . $this->request->get['sort'];
          		}

          		if (isset($this->request->get['order'])) {
          			$url .= '&order=' . $this->request->get['order'];
          		}

          		$pagination = new Pagination();
          		$pagination->total = $product_total;
          		$pagination->page = $page;
          		$pagination->limit = 100;
          		$pagination->url = $this->url->link('catalog/product/batch', 'user_token=' . $this->session->data['user_token'] . $url . '&page={page}', true);

          		$data['pagination'] = $pagination->render();

          		$data['results'] = sprintf($this->language->get('text_pagination'), ($product_total) ? (($page - 1) * 100) + 1 : 0, ((($page - 1) * 100) > ($product_total - 100)) ? $product_total : ((($page - 1) * 100) + 100), $product_total, ceil($product_total / 100));

          		$data['filter_name'] = $filter_name;
          		$data['filter_model'] = $filter_model;
          		$data['filter_price'] = $filter_price;
          		$data['filter_quantity'] = $filter_quantity;
          		$data['filter_status'] = $filter_status;

          		$data['sort'] = $sort;
          		$data['order'] = $order;

          		$data['header'] = $this->load->controller('common/header');
          		$data['column_left'] = $this->load->controller('common/column_left');
          		$data['footer'] = $this->load->controller('common/footer');

          		$this->response->setOutput($this->load->view('catalog/product_batch_list', $data));
          	}
            ]]></add>
        </operation>
    </file>


    <file path="admin/view/template/catalog/product_list.twig">
        <operation>
            <search><![CDATA[
            <a href="{{ add }}" data-toggle="tooltip" title="{{ button_add }}" class="btn btn-primary"><i class="fa fa-plus"></i></a>
            ]]></search>
            <add position="before"><![CDATA[
            <a href="{{ batch }}" data-toggle="tooltip" title="Fast Price Editing" class="btn btn-primary">Fast Price Edit</a>
            ]]></add>
        </operation>
    </file>

</modification>
